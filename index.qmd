```{r echo = FALSE}
options(width = 77)

knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "#>",
  fig.show = "hold",
  fig.align = "center",
  fig.width = 12,
  fig.height = 12,
  out.width = NULL
)
source("./R/generate_mandala.R")
source("./R/generate_sudoku.R")
```

Welcome to this generative puzzle book! Created using the open-source programming language R, this book is completely [free](https://www.gnu.org/philosophy/free-sw.html)! And here's the best part: it never runs out! If you're craving more puzzles, just come back tomorrow. This book refreshes itself every day, offering you 9 brand-new mandalas and 9 sudoku to enjoy.

```{r echo = FALSE}
if (!knitr::is_html_output()) {
  # Mandala
  for (i in seq_len(9)) {
    seed <- sample.int(.Machine$integer.max, 1)
    set.seed(seed)
    p1 <- generate_mandala(labels = TRUE)
    set.seed(seed)
    p2 <- generate_mandala(colors = TRUE)
    gridExtra::grid.arrange(p2, p1, layout_matrix = matrix(c(
      2, 2, 2, 2, NA,
      2, 2, 2, 2, NA,
      2, 2, 2, 2, NA,
      2, 2, 2, 1, 1,
      NA, NA, NA, 1, 1
    ), byrow = TRUE, nrow = 5, ncol = 5))
  }
  # Sudoku
  seed <- sample.int(.Machine$integer.max, 1)
  set.seed(seed)
  plotList <- list()
  for (i in 1:9) {
    plotList[[i]] <- generate_sudoku(blank = c(20, 20, 20, 35, 35, 35, 50, 50 , 50)[i])
  }
  gridExtra::grid.arrange(gridExtra::arrangeGrob(grobs = plotList, layout_matrix = matrix(c(1:9), byrow = TRUE, nrow = 3, ncol = 3)))
  set.seed(seed)
  plotList <- list()
  for (i in 1:9) {
    plotList[[i]] <- generate_sudoku(blank = 0)
  }
  gridExtra::grid.arrange(gridExtra::arrangeGrob(grobs = plotList, layout_matrix = matrix(c(1:9), byrow = TRUE, nrow = 3, ncol = 3)))
}
```
